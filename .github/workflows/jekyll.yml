# 此工作流程使用未经 GitHub 认证的操作。
# 它们由第三方提供，并受
# 单独的服务条款、隐私政策和支持
# 文档的约束。

# 用于构建和将 Jekyll 站点部署到 GitHub Pages 的示例工作流程
name: Deploy Jekyll site to Pages

on:
  # 在推送到默认分支时运行
  push:
    branches: ["master"]

  # 允许您从 Actions 选项卡手动运行此工作流程
  workflow_dispatch:

# 设置 GITHUB_TOKEN 的权限以允许部署到 GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# 只允许一个并发部署，跳过在进行中的运行和最新排队之间排队的运行。
# 但是，不要取消进行中的运行，因为我们希望允许这些生产部署完成。
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@8575951200e472d5f2d95c625da0c7bec8217c42 # v1.161.0
        with:
          ruby-version: '3.3' # .ruby-version 文件不需要
          bundler-cache: true # 运行“bundle install”并自动缓存已安装的 gem
          cache-version: 0 # 如果需要重新下载缓存的 gem，请增加此数字
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # 默认输出到 './_site' 目录
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
            - name: Upload artifact
        # 默认自动从 './_site' 目录上传工件
        uses: actions/upload-pages-artifact@v3
        
  # 部署作业
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
