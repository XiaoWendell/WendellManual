name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  jekyll-build:
    name: Build (jekyll gem)
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]  # 可以扩展为其他操作系统
        jekyll-version: [4.3]  # 保留常用的 Jekyll 版本
        ruby-version: ["3.2"]  # 选择常用的 Ruby 版本
    runs-on: ${{ matrix.os }}
    
    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 设置 Ruby 环境
      - name: Setup Ruby ${{ matrix.ruby-version }}
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ matrix.ruby-version }}
          bundler-cache: false

      # 安装 Jekyll 依赖
      - name: Bundle Install (Jekyll ${{ matrix.jekyll-version }})
        run: bundle install
        env:
          BUNDLE_GEMFILE: fixtures/Gemfile-jekyll-${{ matrix.jekyll-version }}

      # 初始化搜索功能
      - name: Init Search
        run: bundle exec rake search:init
        env:
          BUNDLE_GEMFILE: fixtures/Gemfile-jekyll-${{ matrix.jekyll-version }}

      # 构建 Jekyll 网站
      - name: Build Site
        run: bundle exec jekyll build
        env:
          BUNDLE_GEMFILE: fixtures/Gemfile-jekyll-${{ matrix.jekyll-version }}

  validate:
    name: Validate HTML
    strategy:
      matrix:
        os: [ubuntu-latest]  # 可以扩展为其他操作系统
    runs-on: ${{ matrix.os }}

    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 设置 Ruby 环境
      - name: Setup Ruby "3.2"
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true  # 启用缓存

      # 构建 Jekyll 网站
      - name: Build Site
        run: bundle exec jekyll build

      # 使用 html-proofer 进行链接和 HTML 验证
      - name: Test with html-proofer
        run: bundle exec htmlproofer _site --ignore-urls "/github.com/,/web.archive.org/"
        env:
          NOKOGIRI_USE_SYSTEM_LIBRARIES: true

  assets:
    name: Test CSS and JS
    strategy:
      matrix:
        os: [ubuntu-latest]  # 可以扩展为其他操作系统
        node-version: [20.x]  # Node.js 版本
    runs-on: ${{ matrix.os }}

    steps:
      # 检出代码
      - uses: actions/checkout@v4

      # 设置 Node.js 环境
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      # 安装依赖
      - run: npm install

      # 运行测试
      - run: npm test
