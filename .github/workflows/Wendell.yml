# # Wendell添加
# # 解决在尝试从 RubyGems 镜像（https://gems.ruby-china.com/）获取 gem 数据时，出现了频率限制 (Frequency Capped 514) 的问题。
# name: Build and Deploy Wendell Manual

# on:
#   push:
#     branches:
#       - master  # 替换为你托管的主分支名称（通常是 master 或 main）
#   pull_request:

# jobs:
#   build:
#     runs-on: ubuntu-latest # 指定运行环境

#     steps:
#     - name: Checkout code # 将代码检出到工作目录
#       uses: actions/checkout@v3

#     - name: Setup Ruby # 设置 Ruby 环境
#       uses: ruby/setup-ruby@v1
#       with:
#         ruby-version: 3.2  # 确保版本符合项目需求（Gemfile 可能限制）

#     - name: Configure multiple gem sources # 配置多个 gem 源
#       run: |
#         bundle config set --global source "https://rubygems.org"
#         bundle config set mirror.https://rubygems.org https://gems.ruby-china.com

#     - name: Install dependencies # 安装项目依赖
#       run: bundle install

#     - name: Build the site with Jekyll # 使用 Jekyll 构建站点
#       run: bundle exec jekyll build

#     - name: Run HTML Proofer # 检查生成的 HTML 文件
#       run: bundle exec htmlproofer ./_site --ignore-urls "/github.com/,/web.archive.org/"

#     - name: Deploy to GitHub Pages # 部署到 GitHub Pages
#       uses: peaceiris/actions-gh-pages@v3 # 使用 peaceiris/actions-gh-pages 操作
#       with:
#         github_token: ${{ secrets.GITHUB_TOKEN }}
#         publish_dir: ./_site

# # 为什么会有 gh-pages 分支: 
# # GitHub Pages 部署机制: GitHub Pages 通常要求站点内容存放在 gh-pages 分支中（或者 main 或 master 分支的根目录，具体取决于设置）。当你使用 peaceiris/actions-gh-pages 自动部署时，它会将 _site 文件夹中的构建文件推送到 gh-pages 分支上，而不是直接推送到 master 或 main 分支。
# # 部署文件与源代码分离: 这种做法的目的是保持源代码和生成的静态文件分开。这样可以避免源代码与生成文件混在一个分支中，使得版本控制更加清晰，且便于管理。